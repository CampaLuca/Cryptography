

# This file was *autogenerated* from the file Learning_with_errors/solutions.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_208 = Integer(208); _sage_const_7 = Integer(7); _sage_const_19 = Integer(19); _sage_const_152 = Integer(152); _sage_const_14 = Integer(14); _sage_const_126 = Integer(126); _sage_const_8 = Integer(8); _sage_const_20 = Integer(20); _sage_const_205 = Integer(205); _sage_const_18 = Integer(18); _sage_const_9 = Integer(9); _sage_const_122 = Integer(122); _sage_const_211 = Integer(211)

def learning_with_errors_easy(error_bound, p, couples):
    for error_1 in range(-error_bound, error_bound+_sage_const_1 , +_sage_const_1 ):
        for error_2 in range(-error_bound, error_bound+_sage_const_1 , +_sage_const_1 ):
            A = matrix(GF(p), [couple[_sage_const_0 ] for couple in couples[:_sage_const_2 ]])
            b = matrix(GF(p), [couples[_sage_const_0 ][_sage_const_1 ]+error_1, couples[_sage_const_1 ][_sage_const_1 ]+error_2]).transpose()
            
            try:
                temp_solution = (A.solve_right(b))
                found = True
                for a, c in couples:
                    if ((c - Matrix(ZZ,a)*temp_solution) > _sage_const_3  and (c - Matrix(ZZ,a)*temp_solution) < _sage_const_208 ):
                        found = False
                        break
                if found:
                    return temp_solution
            except:
                continue

couples = [ ([_sage_const_7 , _sage_const_19 ], _sage_const_152 ), ([_sage_const_14 , _sage_const_1 ], _sage_const_126 ), ([_sage_const_8 , _sage_const_20 ], _sage_const_205 ), ([_sage_const_18 , _sage_const_9 ], _sage_const_122 )]   # ( a_i, <a_i, s>)
p = _sage_const_211 
error_bound = _sage_const_3 

print(learning_with_errors_easy(error_bound, p, couples))

